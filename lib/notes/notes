
***General Notes from the Course***

A Widget is an object that describes part of the user interface
    > Everything visible on the screen is a Widget

Command + click goes to the superclass/documentation for the Flutter class

UI's are always defined decoratively

All UI's can be described with a WidgetTree diagram (See 5.73)

Stateless Widgets are given constant configuration, they are all initialized
with immutable attributes on build. UI will always be rendered in the same way.

Stateful Widget can be given configuration on build, but can define mutable states
    > Data might vary and change the display of the UI
    > Overrides the createState() method
        > Another State class instance is assigned createState()

When data is changed use setState() to rebuild the UI for Stateful Widgets

Best practice to make packages and folders for specific pages of the app
that contains all widgets and such relevant to that page.

Where you put the , in the dart code determines how its auto formatted

Used SizedBox widget to create space between Widgets inside a Container

Disable Buttons by setting onPressed to null

Extract common_widgets into their own directory for re-usability
    > Use Constructors for customization

Use wrap with widget command for SizedBoxed

Callbacks are used to pass states from children to parent Widgets

// ***Keyboard shortcuts***
alt + upArrow to increase selection
Shift + Atl + Arrow => Move code up and down a line
option+ CMD + M => extract code to a method / Ctrl + Alt + M for Windows
alt + enter  => Wrap with widget, Does work
CMD + downArrow => view the documentation of a class
Ctl + Click => Windows to open documentation
Ctrl+Alt+L => format code
Ctrl+Alt+M => extract code to method

Move line or selection up: Shift + Alt + Up Arrow
Move line or selection down: Shift + Alt + Down Arrow

stful for Stateful Widget code completion
stless for Stateless Widget code completion

Alt + Enter => Convert to Stateful Widget

// ***Flutter Commands***
flutter doctor
flutter create
open -a Simulator
cd project_name -> flutter run

*********************************************Daily Notes*************************************************
Current Section = (Lesson #) Section 15: BLoCs

234, Section 15: BLoCs

***6/22/23***

State management supports your code base as it grows
All state management techniques have trade offs
All apps are different, and may need different techniques

BLoC = Business Logic Component
Business Logic - defines how we manipulate the data in our application. Code that is not UI specific.
BLoC moves the BL into a separate class


**6/21/23**
Use SizedBox() to set the dimensions of the child Widget
How do you use Padding() in Flutter?

Whats going on with this CustomRaisedButton()? How to make the buttons look disabled?

TextEditingController and FocusNodes must be disposed. Call dispose()

**6/13/23**
Provider is a wrapper class around InheritedWidget that makes it easy to provide objects
> Provider is a generic type, and you must specify with <Class> what it's providing
This is called Scoped Access (InheritedWidget/Provider), which is different from Dependency Injection (via constructor)
Provider allows for state management techniques

**6/11/23**
Build Context is always accessible inside a Stateful Widgets
Context needs to be passed around inside Stateless Widgets

**6/6/23**
Look up how to use named parameters inside methods.

Navigator.of(context).pop(false) or .pop(true) allows a Dialog to return a bool value
true, false, or null. Keep that in mind.

Commit format like so. -m "210, 211 Platform aware dialogs - Ch.12"

Android you can dismiss a dialog by clicking anywhere outside it (can customize this), iOS you cannot

**6/1/23**
Introduced SingleChildScrollView and Scrollable widgets for managing small screen sizes.

Generally speaking, only rebuild the page when needed to increase performance.

**5/31/23**
Best practice to disable signIn forms while an auth request is in progress

**5/30/23**

**5/27/23**
Can you mixin more than one class? Can password and email validation be performed on the Firebase side?

**5/21/23**
Use TextEditingController to manage text inside TextField Widgets

Project support email in firebase can be changed.







